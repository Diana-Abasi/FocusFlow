{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\FocusFlow\\\\src\\\\components\\\\Metrics.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Metrics({\n  metrics,\n  streak\n}) {\n  _s();\n  const {\n    completedTasks,\n    totalFocusTime,\n    totalBreaks\n  } = metrics;\n\n  // Badge thresholds\n  const badgeLevels = {\n    Bronze: 5,\n    Silver: 15,\n    Gold: 30,\n    Platinum: 50\n  };\n\n  // Determine current badge\n  let currentBadge = null;\n  let nextBadge = null;\n  if (completedTasks >= badgeLevels.Platinum) {\n    currentBadge = 'Platinum';\n  } else if (completedTasks >= badgeLevels.Gold) {\n    currentBadge = 'Gold';\n    nextBadge = 'Platinum';\n  } else if (completedTasks >= badgeLevels.Silver) {\n    currentBadge = 'Silver';\n    nextBadge = 'Gold';\n  } else if (completedTasks >= badgeLevels.Bronze) {\n    currentBadge = 'Bronze';\n    nextBadge = 'Silver';\n  } else {\n    nextBadge = 'Bronze';\n  }\n  const [badgeCounts, setBadgeCounts] = useState({\n    Bronze: 0,\n    Silver: 0,\n    Gold: 0,\n    Platinum: 0\n  });\n  const [resetAvailable, setResetAvailable] = useState(false);\n\n  // Handle badge reset\n  const resetBadges = () => {\n    setBadgeCounts(prevCounts => ({\n      Bronze: prevCounts.Bronze + (currentBadge === 'Bronze' ? 1 : 0),\n      Silver: prevCounts.Silver + (currentBadge === 'Silver' ? 1 : 0),\n      Gold: prevCounts.Gold + (currentBadge === 'Gold' ? 1 : 0),\n      Platinum: prevCounts.Platinum + (currentBadge === 'Platinum' ? 1 : 0)\n    }));\n    setResetAvailable(false); // Reset progress\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"metrics bg-gradient-to-br from-white to-gray-100 p-6 rounded-lg shadow-lg text-black w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Completed Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this), \" \", completedTasks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Focus Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), \" \", Math.floor(totalFocusTime / 60), \" min\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Breaks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), \" \", totalBreaks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Current Streak:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this), \" \", streak, \" days\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), currentBadge && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-gradient-to-r from-yellow-400 to-orange-500 text-white rounded-lg shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-center\",\n        children: [\"You earned a \", currentBadge, \" Badge!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), nextBadge && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Next Badge:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 14\n        }, this), \" \", nextBadge]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Complete \", badgeLevels[nextBadge] - completedTasks, \" more tasks to earn this badge!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), resetAvailable && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetBadges,\n      className: \"mt-4 bg-gradient-to-r from-red-500 to-red-700 text-white py-2 px-4 rounded shadow-lg hover:shadow-xl\",\n      children: \"Reset Badges\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold\",\n        children: \"Badge History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Bronze: \", badgeCounts.Bronze]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Silver: \", badgeCounts.Silver]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Gold: \", badgeCounts.Gold]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Platinum: \", badgeCounts.Platinum]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Metrics, \"F73GBr8BBiR8hKUkknM/xb42KF4=\");\n_c = Metrics;\nexport default Metrics;\nvar _c;\n$RefreshReg$(_c, \"Metrics\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Metrics","metrics","streak","_s","completedTasks","totalFocusTime","totalBreaks","badgeLevels","Bronze","Silver","Gold","Platinum","currentBadge","nextBadge","badgeCounts","setBadgeCounts","resetAvailable","setResetAvailable","resetBadges","prevCounts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/diana/FocusFlow/src/components/Metrics.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Metrics({ metrics, streak }) {\r\n  const { completedTasks, totalFocusTime, totalBreaks } = metrics;\r\n\r\n  // Badge thresholds\r\n  const badgeLevels = {\r\n    Bronze: 5,\r\n    Silver: 15,\r\n    Gold: 30,\r\n    Platinum: 50,\r\n  };\r\n\r\n  // Determine current badge\r\n  let currentBadge = null;\r\n  let nextBadge = null;\r\n\r\n  if (completedTasks >= badgeLevels.Platinum) {\r\n    currentBadge = 'Platinum';\r\n  } else if (completedTasks >= badgeLevels.Gold) {\r\n    currentBadge = 'Gold';\r\n    nextBadge = 'Platinum';\r\n  } else if (completedTasks >= badgeLevels.Silver) {\r\n    currentBadge = 'Silver';\r\n    nextBadge = 'Gold';\r\n  } else if (completedTasks >= badgeLevels.Bronze) {\r\n    currentBadge = 'Bronze';\r\n    nextBadge = 'Silver';\r\n  } else {\r\n    nextBadge = 'Bronze';\r\n  }\r\n\r\n  const [badgeCounts, setBadgeCounts] = useState({\r\n    Bronze: 0,\r\n    Silver: 0,\r\n    Gold: 0,\r\n    Platinum: 0,\r\n  });\r\n\r\n  const [resetAvailable, setResetAvailable] = useState(false);\r\n\r\n  // Handle badge reset\r\n  const resetBadges = () => {\r\n    setBadgeCounts((prevCounts) => ({\r\n      Bronze: prevCounts.Bronze + (currentBadge === 'Bronze' ? 1 : 0),\r\n      Silver: prevCounts.Silver + (currentBadge === 'Silver' ? 1 : 0),\r\n      Gold: prevCounts.Gold + (currentBadge === 'Gold' ? 1 : 0),\r\n      Platinum: prevCounts.Platinum + (currentBadge === 'Platinum' ? 1 : 0),\r\n    }));\r\n    setResetAvailable(false); // Reset progress\r\n  };\r\n\r\n  return (\r\n    <section className=\"metrics bg-gradient-to-br from-white to-gray-100 p-6 rounded-lg shadow-lg text-black w-full max-w-md\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Metrics</h2>\r\n      <p><strong>Completed Tasks:</strong> {completedTasks}</p>\r\n      <p><strong>Total Focus Time:</strong> {Math.floor(totalFocusTime / 60)} min</p>\r\n      <p><strong>Total Breaks:</strong> {totalBreaks}</p>\r\n      <p><strong>Current Streak:</strong> {streak} days</p>\r\n\r\n      {/* Badge Display */}\r\n      {currentBadge && (\r\n        <div className=\"mt-4 p-4 bg-gradient-to-r from-yellow-400 to-orange-500 text-white rounded-lg shadow\">\r\n          <p className=\"font-bold text-center\">You earned a {currentBadge} Badge!</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Progress Toward Next Badge */}\r\n      {nextBadge && (\r\n        <div className=\"mt-4\">\r\n          <p><strong>Next Badge:</strong> {nextBadge}</p>\r\n          <p>Complete {badgeLevels[nextBadge] - completedTasks} more tasks to earn this badge!</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Reset Button */}\r\n      {resetAvailable && (\r\n        <button\r\n          onClick={resetBadges}\r\n          className=\"mt-4 bg-gradient-to-r from-red-500 to-red-700 text-white py-2 px-4 rounded shadow-lg hover:shadow-xl\"\r\n        >\r\n          Reset Badges\r\n        </button>\r\n      )}\r\n\r\n      {/* Badge History */}\r\n      <div className=\"mt-4\">\r\n        <h3 className=\"text-lg font-bold\">Badge History</h3>\r\n        <ul className=\"list-disc pl-6\">\r\n          <li>Bronze: {badgeCounts.Bronze}</li>\r\n          <li>Silver: {badgeCounts.Silver}</li>\r\n          <li>Gold: {badgeCounts.Gold}</li>\r\n          <li>Platinum: {badgeCounts.Platinum}</li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Metrics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}