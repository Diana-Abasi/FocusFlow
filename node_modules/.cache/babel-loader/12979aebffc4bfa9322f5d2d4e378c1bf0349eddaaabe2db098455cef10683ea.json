{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\FocusFlow\\\\src\\\\components\\\\Soundscapes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactAudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Soundscapes() {\n  _s();\n  const [currentSound, setCurrentSound] = useState('');\n  const soundOptions = [{\n    name: 'Rain',\n    url: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3'\n  }, {\n    name: 'White Noise',\n    url: 'https://file-examples.com/storage/feb2018/5021f2e79d63c9c5a2542892/2018/02/FileExample_MP3_700KB.mp3'\n  }, {\n    name: 'Lo-fi Beats',\n    url: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"soundscapes p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl mb-4\",\n      children: \"Focus Soundscapes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"border p-2 rounded mb-4 w-full\",\n      onChange: e => setCurrentSound(e.target.value),\n      value: currentSound,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a soundscape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), soundOptions.map(sound => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: sound.url,\n        children: sound.name\n      }, sound.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), currentSound && /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n      src: currentSound,\n      autoPlay: true,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Soundscapes, \"BhcoJbFK4uC/eL4IN2i7Gznnnsg=\");\n_c = Soundscapes;\nexport default Soundscapes;\nvar _c;\n$RefreshReg$(_c, \"Soundscapes\");","map":{"version":3,"names":["React","useState","ReactAudioPlayer","jsxDEV","_jsxDEV","Soundscapes","_s","currentSound","setCurrentSound","soundOptions","name","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","sound","src","autoPlay","controls","_c","$RefreshReg$"],"sources":["C:/Users/diana/FocusFlow/src/components/Soundscapes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactAudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\n\r\nfunction Soundscapes() {\r\n  const [currentSound, setCurrentSound] = useState('');\r\n\r\n  const soundOptions = [\r\n    { name: 'Rain', url: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3' },\r\n    { name: 'White Noise', url: 'https://file-examples.com/storage/feb2018/5021f2e79d63c9c5a2542892/2018/02/FileExample_MP3_700KB.mp3' },\r\n    { name: 'Lo-fi Beats', url: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3' },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"soundscapes p-4\">\r\n      <h2 className=\"text-xl mb-4\">Focus Soundscapes</h2>\r\n      <select\r\n        className=\"border p-2 rounded mb-4 w-full\"\r\n        onChange={(e) => setCurrentSound(e.target.value)}\r\n        value={currentSound}\r\n      >\r\n        <option value=\"\">Select a soundscape</option>\r\n        {soundOptions.map((sound) => (\r\n          <option key={sound.name} value={sound.url}>\r\n            {sound.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {currentSound && (\r\n        <ReactAudioPlayer\r\n          src={currentSound}\r\n          autoPlay\r\n          controls\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Soundscapes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,uBAAuB;AACpD,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMQ,YAAY,GAAG,CACnB;IAAEC,IAAI,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAgE,CAAC,EACtF;IAAED,IAAI,EAAE,aAAa;IAAEC,GAAG,EAAE;EAAuG,CAAC,EACpI;IAAED,IAAI,EAAE,aAAa;IAAEC,GAAG,EAAE;EAAgE,CAAC,CAC9F;EAED,oBACEP,OAAA;IAASQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAClCT,OAAA;MAAIQ,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDb,OAAA;MACEQ,SAAS,EAAC,gCAAgC;MAC1CM,QAAQ,EAAGC,CAAC,IAAKX,eAAe,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MACjDA,KAAK,EAAEd,YAAa;MAAAM,QAAA,gBAEpBT,OAAA;QAAQiB,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC5CR,YAAY,CAACa,GAAG,CAAEC,KAAK,iBACtBnB,OAAA;QAAyBiB,KAAK,EAAEE,KAAK,CAACZ,GAAI;QAAAE,QAAA,EACvCU,KAAK,CAACb;MAAI,GADAa,KAAK,CAACb,IAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EACRV,YAAY,iBACXH,OAAA,CAACF,gBAAgB;MACfsB,GAAG,EAAEjB,YAAa;MAClBkB,QAAQ;MACRC,QAAQ;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd;AAACX,EAAA,CAjCQD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAmCpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}