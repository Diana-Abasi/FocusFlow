{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\FocusFlow\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer({\n  metrics,\n  setMetrics,\n  savedTasks\n}) {\n  _s();\n  const [time, setTime] = useState(25 * 60); // Default 25 minutes\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentTask, setCurrentTask] = useState('');\n  const handleTaskSelection = e => {\n    const task = savedTasks.find(task => task.name === e.target.value);\n    if (task) {\n      setCurrentTask(task.name);\n      setTime(task.time * 60);\n    }\n  };\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime <= 1) {\n            setMetrics(prevMetrics => ({\n              ...prevMetrics,\n              completedTasks: prevMetrics.completedTasks + 1,\n              totalFocusTime: prevMetrics.totalFocusTime + 25 * 60\n            }));\n            setIsRunning(false);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning, setMetrics]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"timer bg-white p-6 rounded-lg shadow-lg text-black w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: currentTask || 'Focus Timer'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-5xl font-mono mb-6\",\n      children: [Math.floor(time / 60), \":\", String(time % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(!isRunning),\n        className: `py-2 px-6 rounded ${isRunning ? 'bg-red-500' : 'bg-green-500'} text-white font-bold`,\n        children: isRunning ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTime(25 * 60),\n        className: \"py-2 px-6 rounded bg-gray-500 text-white font-bold\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleTaskSelection,\n      className: \"w-full mt-4 p-2 border rounded text-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Saved Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), savedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: task.name,\n        children: [task.name, \" - \", task.time, \" min\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"hJfRaZWOfy2gnDskbLd1wD0XH3o=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","metrics","setMetrics","savedTasks","_s","time","setTime","isRunning","setIsRunning","currentTask","setCurrentTask","handleTaskSelection","e","task","find","name","target","value","interval","setInterval","prevTime","prevMetrics","completedTasks","totalFocusTime","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","String","padStart","onClick","onChange","map","index","_c","$RefreshReg$"],"sources":["C:/Users/diana/FocusFlow/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Timer({ metrics, setMetrics, savedTasks }) {\n  const [time, setTime] = useState(25 * 60); // Default 25 minutes\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentTask, setCurrentTask] = useState('');\n\n  const handleTaskSelection = (e) => {\n    const task = savedTasks.find((task) => task.name === e.target.value);\n    if (task) {\n      setCurrentTask(task.name);\n      setTime(task.time * 60);\n    }\n  };\n\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime((prevTime) => {\n          if (prevTime <= 1) {\n            setMetrics((prevMetrics) => ({\n              ...prevMetrics,\n              completedTasks: prevMetrics.completedTasks + 1,\n              totalFocusTime: prevMetrics.totalFocusTime + 25 * 60,\n            }));\n            setIsRunning(false);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning, setMetrics]);\n\n  return (\n    <section className=\"timer bg-white p-6 rounded-lg shadow-lg text-black w-full max-w-md\">\n      <h2 className=\"text-xl font-bold mb-4\">{currentTask || 'Focus Timer'}</h2>\n      <div className=\"text-5xl font-mono mb-6\">\n        {Math.floor(time / 60)}:{String(time % 60).padStart(2, '0')}\n      </div>\n      <div className=\"flex justify-center space-x-4\">\n        <button\n          onClick={() => setIsRunning(!isRunning)}\n          className={`py-2 px-6 rounded ${isRunning ? 'bg-red-500' : 'bg-green-500'} text-white font-bold`}\n        >\n          {isRunning ? 'Pause' : 'Start'}\n        </button>\n        <button\n          onClick={() => setTime(25 * 60)}\n          className=\"py-2 px-6 rounded bg-gray-500 text-white font-bold\"\n        >\n          Reset\n        </button>\n      </div>\n      <select\n        onChange={handleTaskSelection}\n        className=\"w-full mt-4 p-2 border rounded text-black\"\n      >\n        <option value=\"\">Select a Saved Task</option>\n        {savedTasks.map((task, index) => (\n          <option key={index} value={task.name}>\n            {task.name} - {task.time} min\n          </option>\n        ))}\n      </select>\n    </section>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}