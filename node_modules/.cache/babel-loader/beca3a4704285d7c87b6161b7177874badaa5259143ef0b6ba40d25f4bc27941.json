{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\FocusFlow\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer({\n  metrics,\n  setMetrics,\n  savedTasks\n}) {\n  _s();\n  const [time, setTime] = useState(25 * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentTask, setCurrentTask] = useState('');\n  const [impromptuTime, setImpromptuTime] = useState(25);\n  const [impromptuSound, setImpromptuSound] = useState('');\n  const handleTaskSelection = e => {\n    const task = savedTasks.find(task => task.name === e.target.value);\n    if (task) {\n      setCurrentTask(task.name);\n      setTime(task.time * 60);\n    }\n  };\n  const handleImpromptuTimeChange = e => {\n    const minutes = parseInt(e.target.value, 10);\n    setImpromptuTime(minutes);\n    setTime(minutes * 60);\n    setCurrentTask('Impromptu Task');\n  };\n  const handleImpromptuSoundChange = e => {\n    setImpromptuSound(e.target.value);\n  };\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime <= 1) {\n            setMetrics(prevMetrics => ({\n              ...prevMetrics,\n              completedTasks: prevMetrics.completedTasks + 1,\n              totalFocusTime: prevMetrics.totalFocusTime + impromptuTime * 60\n            }));\n            setIsRunning(false);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning, setMetrics, impromptuTime]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"timer bg-white p-6 rounded-lg shadow-lg text-black w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: currentTask || 'Focus Timer'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-5xl font-mono mb-6 text-center\",\n      children: [Math.floor(time / 60), \":\", String(time % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(!isRunning),\n        className: `py-2 px-6 rounded transform transition-all duration-200 ${isRunning ? 'bg-red-500 text-white shadow-lg hover:shadow-xl active:scale-95' : 'bg-green-500 text-white shadow-lg hover:shadow-xl active:scale-95'} font-bold`,\n        children: isRunning ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTime(impromptuTime * 60),\n        className: \"py-2 px-6 rounded bg-gray-500 text-white font-bold shadow-lg hover:shadow-xl active:scale-95 transform transition-all duration-200\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleTaskSelection,\n        className: \"w-full p-2 border rounded text-black mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Saved Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), savedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: task.name,\n          children: [task.name, \" - \", task.time, \" min\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"impromptu-time\",\n        className: \"block text-sm font-bold mb-2\",\n        children: \"Impromptu Task Timer (Minutes)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"impromptu-time\",\n        className: \"w-full p-2 border rounded text-black mb-4\",\n        value: impromptuTime,\n        onChange: handleImpromptuTimeChange,\n        children: [5, 10, 15, 20, 25, 30, 45, 60].map(minute => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: minute,\n          children: [minute, \" Minutes\"]\n        }, minute, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"impromptu-sound\",\n        className: \"block text-sm font-bold mb-2\",\n        children: \"Impromptu Task Sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"impromptu-sound\",\n        className: \"w-full p-2 border rounded text-black\",\n        value: impromptuSound,\n        onChange: handleImpromptuSoundChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"No Sound\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Rain\",\n          children: \"Rain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"White Noise\",\n          children: \"White Noise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Lo-fi Beats\",\n          children: \"Lo-fi Beats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"17N2EkQHZNPF5JFLGLd3DYOxV9M=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","metrics","setMetrics","savedTasks","_s","time","setTime","isRunning","setIsRunning","currentTask","setCurrentTask","impromptuTime","setImpromptuTime","impromptuSound","setImpromptuSound","handleTaskSelection","e","task","find","name","target","value","handleImpromptuTimeChange","minutes","parseInt","handleImpromptuSoundChange","interval","setInterval","prevTime","prevMetrics","completedTasks","totalFocusTime","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","String","padStart","onClick","onChange","map","index","htmlFor","id","minute","_c","$RefreshReg$"],"sources":["C:/Users/diana/FocusFlow/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Timer({ metrics, setMetrics, savedTasks }) {\n  const [time, setTime] = useState(25 * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentTask, setCurrentTask] = useState('');\n  const [impromptuTime, setImpromptuTime] = useState(25);\n  const [impromptuSound, setImpromptuSound] = useState('');\n\n  const handleTaskSelection = (e) => {\n    const task = savedTasks.find((task) => task.name === e.target.value);\n    if (task) {\n      setCurrentTask(task.name);\n      setTime(task.time * 60);\n    }\n  };\n\n  const handleImpromptuTimeChange = (e) => {\n    const minutes = parseInt(e.target.value, 10);\n    setImpromptuTime(minutes);\n    setTime(minutes * 60);\n    setCurrentTask('Impromptu Task');\n  };\n\n  const handleImpromptuSoundChange = (e) => {\n    setImpromptuSound(e.target.value);\n  };\n\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime((prevTime) => {\n          if (prevTime <= 1) {\n            setMetrics((prevMetrics) => ({\n              ...prevMetrics,\n              completedTasks: prevMetrics.completedTasks + 1,\n              totalFocusTime: prevMetrics.totalFocusTime + impromptuTime * 60,\n            }));\n            setIsRunning(false);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning, setMetrics, impromptuTime]);\n\n  return (\n    <section className=\"timer bg-white p-6 rounded-lg shadow-lg text-black w-full max-w-md\">\n      <h2 className=\"text-2xl font-bold mb-4 text-center\">{currentTask || 'Focus Timer'}</h2>\n      <div className=\"text-5xl font-mono mb-6 text-center\">\n        {Math.floor(time / 60)}:{String(time % 60).padStart(2, '0')}\n      </div>\n      <div className=\"flex justify-center space-x-4\">\n        <button\n          onClick={() => setIsRunning(!isRunning)}\n          className={`py-2 px-6 rounded transform transition-all duration-200 ${\n            isRunning\n              ? 'bg-red-500 text-white shadow-lg hover:shadow-xl active:scale-95'\n              : 'bg-green-500 text-white shadow-lg hover:shadow-xl active:scale-95'\n          } font-bold`}\n        >\n          {isRunning ? 'Pause' : 'Start'}\n        </button>\n        <button\n          onClick={() => setTime(impromptuTime * 60)}\n          className=\"py-2 px-6 rounded bg-gray-500 text-white font-bold shadow-lg hover:shadow-xl active:scale-95 transform transition-all duration-200\"\n        >\n          Reset\n        </button>\n      </div>\n      <div className=\"mt-4\">\n        <select\n          onChange={handleTaskSelection}\n          className=\"w-full p-2 border rounded text-black mb-4\"\n        >\n          <option value=\"\">Select a Saved Task</option>\n          {savedTasks.map((task, index) => (\n            <option key={index} value={task.name}>\n              {task.name} - {task.time} min\n            </option>\n          ))}\n        </select>\n        <label htmlFor=\"impromptu-time\" className=\"block text-sm font-bold mb-2\">\n          Impromptu Task Timer (Minutes)\n        </label>\n        <select\n          id=\"impromptu-time\"\n          className=\"w-full p-2 border rounded text-black mb-4\"\n          value={impromptuTime}\n          onChange={handleImpromptuTimeChange}\n        >\n          {[5, 10, 15, 20, 25, 30, 45, 60].map((minute) => (\n            <option key={minute} value={minute}>\n              {minute} Minutes\n            </option>\n          ))}\n        </select>\n        <label htmlFor=\"impromptu-sound\" className=\"block text-sm font-bold mb-2\">\n          Impromptu Task Sound\n        </label>\n        <select\n          id=\"impromptu-sound\"\n          className=\"w-full p-2 border rounded text-black\"\n          value={impromptuSound}\n          onChange={handleImpromptuSoundChange}\n        >\n          <option value=\"\">No Sound</option>\n          <option value=\"Rain\">Rain</option>\n          <option value=\"White Noise\">White Noise</option>\n          <option value=\"Lo-fi Beats\">Lo-fi Beats</option>\n        </select>\n      </div>\n    </section>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}