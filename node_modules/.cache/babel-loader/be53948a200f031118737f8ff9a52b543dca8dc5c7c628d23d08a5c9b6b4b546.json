{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\FocusFlow\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer({\n  defaultTime,\n  onFocusComplete\n}) {\n  _s();\n  const [time, setTime] = useState(defaultTime * 60); // Initialize with default time in seconds\n  const [isRunning, setIsRunning] = useState(false);\n\n  // Update the timer when the default time changes\n  useEffect(() => {\n    setTime(defaultTime * 60);\n  }, [defaultTime]);\n\n  // Handle the countdown logic\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime <= 1) {\n            setIsRunning(false); // Stop the timer\n            onFocusComplete(); // Trigger focus completion action\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000); // Update every second\n      return () => clearInterval(interval); // Cleanup interval\n    }\n  }, [isRunning, onFocusComplete]);\n\n  // Start/Pause the timer\n  const toggleTimer = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Reset the timer to the default time\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTime(defaultTime * 60);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"timer text-center p-6 bg-white rounded-lg shadow-lg text-black w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Focus Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-5xl font-mono mb-6\",\n      children: [Math.floor(time / 60), \":\", String(time % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `py-2 px-6 rounded ${isRunning ? 'bg-red-500' : 'bg-green-500'} text-white font-bold`,\n        onClick: toggleTimer,\n        children: isRunning ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-2 px-6 rounded bg-gray-500 text-white font-bold\",\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"bIgFdSz0Ek+JWKTEdo8YUB9NxLA=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","defaultTime","onFocusComplete","_s","time","setTime","isRunning","setIsRunning","interval","setInterval","prevTime","clearInterval","toggleTimer","resetTimer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","String","padStart","onClick","_c","$RefreshReg$"],"sources":["C:/Users/diana/FocusFlow/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Timer({ defaultTime, onFocusComplete }) {\n  const [time, setTime] = useState(defaultTime * 60); // Initialize with default time in seconds\n  const [isRunning, setIsRunning] = useState(false);\n\n  // Update the timer when the default time changes\n  useEffect(() => {\n    setTime(defaultTime * 60);\n  }, [defaultTime]);\n\n  // Handle the countdown logic\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime((prevTime) => {\n          if (prevTime <= 1) {\n            setIsRunning(false); // Stop the timer\n            onFocusComplete(); // Trigger focus completion action\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000); // Update every second\n      return () => clearInterval(interval); // Cleanup interval\n    }\n  }, [isRunning, onFocusComplete]);\n\n  // Start/Pause the timer\n  const toggleTimer = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Reset the timer to the default time\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTime(defaultTime * 60);\n  };\n\n  return (\n    <section className=\"timer text-center p-6 bg-white rounded-lg shadow-lg text-black w-full max-w-md\">\n      <h2 className=\"text-xl font-bold mb-4\">Focus Timer</h2>\n      <div className=\"text-5xl font-mono mb-6\">\n        {Math.floor(time / 60)}:{String(time % 60).padStart(2, '0')}\n      </div>\n      <div className=\"flex justify-center space-x-4\">\n        <button\n          className={`py-2 px-6 rounded ${\n            isRunning ? 'bg-red-500' : 'bg-green-500'\n          } text-white font-bold`}\n          onClick={toggleTimer}\n        >\n          {isRunning ? 'Pause' : 'Start'}\n        </button>\n        <button\n          className=\"py-2 px-6 rounded bg-gray-500 text-white font-bold\"\n          onClick={resetTimer}\n        >\n          Reset\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}