{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\FocusFlow\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer({\n  metrics,\n  setMetrics\n}) {\n  _s();\n  const [time, setTime] = useState(25 * 60); // Default to 25 minutes\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime <= 1) {\n            setMetrics(prevMetrics => ({\n              ...prevMetrics,\n              completedTasks: prevMetrics.completedTasks + 1,\n              totalFocusTime: prevMetrics.totalFocusTime + 25 * 60\n            }));\n            setIsRunning(false);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning, setMetrics]);\n  const takeBreak = () => {\n    setMetrics(prevMetrics => ({\n      ...prevMetrics,\n      totalBreaks: prevMetrics.totalBreaks + 1\n    }));\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTime(25 * 60);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"timer bg-white p-6 rounded-lg shadow-lg text-black w-full max-w-md mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Focus Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-5xl font-mono mb-6\",\n      children: [Math.floor(time / 60), \":\", String(time % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(!isRunning),\n        className: `py-2 px-6 rounded ${isRunning ? 'bg-red-500' : 'bg-green-500'} text-white font-bold`,\n        children: isRunning ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        className: \"py-2 px-6 rounded bg-gray-500 text-white font-bold\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: takeBreak,\n        className: \"py-2 px-6 rounded bg-blue-500 text-white font-bold\",\n        children: \"Take a Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"8IQb92saFMe9i5fHX6rhuJ0TcL8=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","metrics","setMetrics","_s","time","setTime","isRunning","setIsRunning","interval","setInterval","prevTime","prevMetrics","completedTasks","totalFocusTime","clearInterval","takeBreak","totalBreaks","resetTimer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","String","padStart","onClick","_c","$RefreshReg$"],"sources":["C:/Users/diana/FocusFlow/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Timer({ metrics, setMetrics }) {\n  const [time, setTime] = useState(25 * 60); // Default to 25 minutes\n  const [isRunning, setIsRunning] = useState(false);\n\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime((prevTime) => {\n          if (prevTime <= 1) {\n            setMetrics((prevMetrics) => ({\n              ...prevMetrics,\n              completedTasks: prevMetrics.completedTasks + 1,\n              totalFocusTime: prevMetrics.totalFocusTime + 25 * 60,\n            }));\n            setIsRunning(false);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning, setMetrics]);\n\n  const takeBreak = () => {\n    setMetrics((prevMetrics) => ({\n      ...prevMetrics,\n      totalBreaks: prevMetrics.totalBreaks + 1,\n    }));\n    setIsRunning(false);\n  };\n\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTime(25 * 60);\n  };\n\n  return (\n    <section className=\"timer bg-white p-6 rounded-lg shadow-lg text-black w-full max-w-md mb-6\">\n      <h2 className=\"text-xl font-bold mb-4\">Focus Timer</h2>\n      <div className=\"text-5xl font-mono mb-6\">\n        {Math.floor(time / 60)}:{String(time % 60).padStart(2, '0')}\n      </div>\n      <div className=\"flex justify-center space-x-4\">\n        <button\n          onClick={() => setIsRunning(!isRunning)}\n          className={`py-2 px-6 rounded ${isRunning ? 'bg-red-500' : 'bg-green-500'} text-white font-bold`}\n        >\n          {isRunning ? 'Pause' : 'Start'}\n        </button>\n        <button\n          onClick={resetTimer}\n          className=\"py-2 px-6 rounded bg-gray-500 text-white font-bold\"\n        >\n          Reset\n        </button>\n        <button\n          onClick={takeBreak}\n          className=\"py-2 px-6 rounded bg-blue-500 text-white font-bold\"\n        >\n          Take a Break\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}