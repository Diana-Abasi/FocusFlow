{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\FocusFlow\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer({\n  onFocusComplete\n}) {\n  _s();\n  const [time, setTime] = useState(1500); // 25 minutes in seconds\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime === 1) {\n            setIsRunning(false);\n            onFocusComplete();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning, onFocusComplete]);\n  const toggleTimer = () => {\n    setIsRunning(!isRunning);\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTime(1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"timer text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl mb-4\",\n      children: \"Focus Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-4xl font-mono my-4\",\n      children: [Math.floor(time / 60), \":\", String(time % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `py-2 px-4 rounded ${isRunning ? 'bg-red-500' : 'bg-green-500'} text-white`,\n      onClick: toggleTimer,\n      children: isRunning ? 'Pause' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"py-2 px-4 rounded bg-gray-500 text-white ml-4\",\n      onClick: resetTimer,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"dQ4ivm7lP74FhQgJ8dr4IH6I3p8=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","onFocusComplete","_s","time","setTime","isRunning","setIsRunning","interval","setInterval","prevTime","clearInterval","toggleTimer","resetTimer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","String","padStart","onClick","_c","$RefreshReg$"],"sources":["C:/Users/diana/FocusFlow/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Timer({ onFocusComplete }) {\n  const [time, setTime] = useState(1500); // 25 minutes in seconds\n  const [isRunning, setIsRunning] = useState(false);\n\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime((prevTime) => {\n          if (prevTime === 1) {\n            setIsRunning(false);\n            onFocusComplete();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning, onFocusComplete]);\n\n  const toggleTimer = () => {\n    setIsRunning(!isRunning);\n  };\n\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTime(1500);\n  };\n\n  return (\n    <section className=\"timer text-center p-4\">\n      <h2 className=\"text-xl mb-4\">Focus Timer</h2>\n      <div className=\"text-4xl font-mono my-4\">\n        {Math.floor(time / 60)}:{String(time % 60).padStart(2, '0')}\n      </div>\n      <button\n        className={`py-2 px-4 rounded ${\n          isRunning ? 'bg-red-500' : 'bg-green-500'\n        } text-white`}\n        onClick={toggleTimer}\n      >\n        {isRunning ? 'Pause' : 'Start'}\n      </button>\n      <button\n        className=\"py-2 px-4 rounded bg-gray-500 text-white ml-4\"\n        onClick={resetTimer}\n      >\n        Reset\n      </button>\n    </section>\n  );\n}\n\nexport default Timer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIQ,SAAS,EAAE;MACb,MAAME,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCJ,OAAO,CAAEK,QAAQ,IAAK;UACpB,IAAIA,QAAQ,KAAK,CAAC,EAAE;YAClBH,YAAY,CAAC,KAAK,CAAC;YACnBL,eAAe,CAAC,CAAC;YACjB,OAAO,CAAC;UACV;UACA,OAAOQ,QAAQ,GAAG,CAAC;QACrB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACF,SAAS,EAAEJ,eAAe,CAAC,CAAC;EAEhC,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBL,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBN,YAAY,CAAC,KAAK,CAAC;IACnBF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEL,OAAA;IAASc,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACxCf,OAAA;MAAIc,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CnB,OAAA;MAAKc,SAAS,EAAC,yBAAyB;MAAAC,QAAA,GACrCK,IAAI,CAACC,KAAK,CAACjB,IAAI,GAAG,EAAE,CAAC,EAAC,GAAC,EAACkB,MAAM,CAAClB,IAAI,GAAG,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eACNnB,OAAA;MACEc,SAAS,EAAE,qBACTR,SAAS,GAAG,YAAY,GAAG,cAAc,aAC7B;MACdkB,OAAO,EAAEZ,WAAY;MAAAG,QAAA,EAEpBT,SAAS,GAAG,OAAO,GAAG;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACTnB,OAAA;MACEc,SAAS,EAAC,+CAA+C;MACzDU,OAAO,EAAEX,UAAW;MAAAE,QAAA,EACrB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd;AAAChB,EAAA,CAnDQF,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAqDd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}