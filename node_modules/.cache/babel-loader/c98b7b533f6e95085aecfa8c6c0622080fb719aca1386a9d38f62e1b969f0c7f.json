{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\FocusFlow\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer({\n  metrics,\n  setMetrics,\n  savedTasks\n}) {\n  _s();\n  const [time, setTime] = useState(25 * 60); // Default 25 minutes\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentTask, setCurrentTask] = useState('');\n  const [impromptuTime, setImpromptuTime] = useState(25);\n  const handleTaskSelection = e => {\n    const task = savedTasks.find(task => task.name === e.target.value);\n    if (task) {\n      setCurrentTask(task.name);\n      setTime(task.time * 60);\n    }\n  };\n  const handleImpromptuTimeChange = e => {\n    const minutes = parseInt(e.target.value, 10);\n    setImpromptuTime(minutes);\n    setTime(minutes * 60);\n    setCurrentTask('Impromptu Task');\n  };\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime <= 1) {\n            setMetrics(prevMetrics => ({\n              ...prevMetrics,\n              completedTasks: prevMetrics.completedTasks + 1,\n              totalFocusTime: prevMetrics.totalFocusTime + impromptuTime * 60\n            }));\n            setIsRunning(false);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning, setMetrics, impromptuTime]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"timer bg-white p-6 rounded-lg shadow-lg text-black w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: currentTask || 'Focus Timer'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-5xl font-mono mb-6\",\n      children: [Math.floor(time / 60), \":\", String(time % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(!isRunning),\n        className: `py-2 px-6 rounded ${isRunning ? 'bg-red-500' : 'bg-green-500'} text-white font-bold`,\n        children: isRunning ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTime(impromptuTime * 60),\n        className: \"py-2 px-6 rounded bg-gray-500 text-white font-bold\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleTaskSelection,\n        className: \"w-full p-2 border rounded text-black mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Saved Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), savedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: task.name,\n          children: [task.name, \" - \", task.time, \" min\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"impromptu-time\",\n        className: \"block text-sm font-bold mb-2\",\n        children: \"Impromptu Task Timer (Minutes)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"impromptu-time\",\n        className: \"w-full p-2 border rounded text-black\",\n        value: impromptuTime,\n        onChange: handleImpromptuTimeChange,\n        children: [5, 10, 15, 20, 25, 30, 45, 60].map(minute => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: minute,\n          children: [minute, \" Minutes\"]\n        }, minute, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"t8rFu4C+0ELqGzhEX3DKrGD85PY=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","metrics","setMetrics","savedTasks","_s","time","setTime","isRunning","setIsRunning","currentTask","setCurrentTask","impromptuTime","setImpromptuTime","handleTaskSelection","e","task","find","name","target","value","handleImpromptuTimeChange","minutes","parseInt","interval","setInterval","prevTime","prevMetrics","completedTasks","totalFocusTime","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","String","padStart","onClick","onChange","map","index","htmlFor","id","minute","_c","$RefreshReg$"],"sources":["C:/Users/diana/FocusFlow/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Timer({ metrics, setMetrics, savedTasks }) {\n  const [time, setTime] = useState(25 * 60); // Default 25 minutes\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentTask, setCurrentTask] = useState('');\n  const [impromptuTime, setImpromptuTime] = useState(25);\n\n  const handleTaskSelection = (e) => {\n    const task = savedTasks.find((task) => task.name === e.target.value);\n    if (task) {\n      setCurrentTask(task.name);\n      setTime(task.time * 60);\n    }\n  };\n\n  const handleImpromptuTimeChange = (e) => {\n    const minutes = parseInt(e.target.value, 10);\n    setImpromptuTime(minutes);\n    setTime(minutes * 60);\n    setCurrentTask('Impromptu Task');\n  };\n\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime((prevTime) => {\n          if (prevTime <= 1) {\n            setMetrics((prevMetrics) => ({\n              ...prevMetrics,\n              completedTasks: prevMetrics.completedTasks + 1,\n              totalFocusTime: prevMetrics.totalFocusTime + impromptuTime * 60,\n            }));\n            setIsRunning(false);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning, setMetrics, impromptuTime]);\n\n  return (\n    <section className=\"timer bg-white p-6 rounded-lg shadow-lg text-black w-full max-w-md\">\n      <h2 className=\"text-xl font-bold mb-4\">{currentTask || 'Focus Timer'}</h2>\n      <div className=\"text-5xl font-mono mb-6\">\n        {Math.floor(time / 60)}:{String(time % 60).padStart(2, '0')}\n      </div>\n      <div className=\"flex justify-center space-x-4\">\n        <button\n          onClick={() => setIsRunning(!isRunning)}\n          className={`py-2 px-6 rounded ${isRunning ? 'bg-red-500' : 'bg-green-500'} text-white font-bold`}\n        >\n          {isRunning ? 'Pause' : 'Start'}\n        </button>\n        <button\n          onClick={() => setTime(impromptuTime * 60)}\n          className=\"py-2 px-6 rounded bg-gray-500 text-white font-bold\"\n        >\n          Reset\n        </button>\n      </div>\n      <div className=\"mt-4\">\n        <select\n          onChange={handleTaskSelection}\n          className=\"w-full p-2 border rounded text-black mb-4\"\n        >\n          <option value=\"\">Select a Saved Task</option>\n          {savedTasks.map((task, index) => (\n            <option key={index} value={task.name}>\n              {task.name} - {task.time} min\n            </option>\n          ))}\n        </select>\n        <label htmlFor=\"impromptu-time\" className=\"block text-sm font-bold mb-2\">\n          Impromptu Task Timer (Minutes)\n        </label>\n        <select\n          id=\"impromptu-time\"\n          className=\"w-full p-2 border rounded text-black\"\n          value={impromptuTime}\n          onChange={handleImpromptuTimeChange}\n        >\n          {[5, 10, 15, 20, 25, 30, 45, 60].map((minute) => (\n            <option key={minute} value={minute}>\n              {minute} Minutes\n            </option>\n          ))}\n        </select>\n      </div>\n    </section>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}