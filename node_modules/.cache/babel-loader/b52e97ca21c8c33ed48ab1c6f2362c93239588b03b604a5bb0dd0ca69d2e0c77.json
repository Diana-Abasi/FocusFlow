{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diana\\\\FocusFlow\\\\src\\\\components\\\\Metrics.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Metrics({\n  metrics,\n  streak\n}) {\n  const {\n    completedTasks\n  } = metrics;\n  const badgeLevels = {\n    Bronze: 5,\n    Silver: 15,\n    Gold: 30,\n    Platinum: 50\n  };\n  let currentBadge = null;\n  let nextBadge = null;\n  if (completedTasks >= badgeLevels.Platinum) {\n    currentBadge = \"Platinum\";\n  } else if (completedTasks >= badgeLevels.Gold) {\n    currentBadge = \"Gold\";\n    nextBadge = \"Platinum\";\n  } else if (completedTasks >= badgeLevels.Silver) {\n    currentBadge = \"Silver\";\n    nextBadge = \"Gold\";\n  } else if (completedTasks >= badgeLevels.Bronze) {\n    currentBadge = \"Bronze\";\n    nextBadge = \"Silver\";\n  } else {\n    nextBadge = \"Bronze\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"metrics bg-gradient-to-br from-white to-gray-100 p-6 rounded-lg shadow-lg text-black w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Completed Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this), \" \", completedTasks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Current Streak:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this), \" \", streak, \" days\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), currentBadge && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-gradient-to-r from-yellow-400 to-orange-500 text-white rounded-lg shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-center\",\n        children: [\"You earned a \", currentBadge, \" Badge!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), nextBadge && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Next Badge:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 14\n        }, this), \" \", nextBadge]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Complete \", badgeLevels[nextBadge] - completedTasks, \" more tasks to earn this badge!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = Metrics;\nexport default Metrics;\nvar _c;\n$RefreshReg$(_c, \"Metrics\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Metrics","metrics","streak","completedTasks","badgeLevels","Bronze","Silver","Gold","Platinum","currentBadge","nextBadge","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/diana/FocusFlow/src/components/Metrics.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Metrics({ metrics, streak }) {\r\n  const { completedTasks } = metrics;\r\n\r\n  const badgeLevels = {\r\n    Bronze: 5,\r\n    Silver: 15,\r\n    Gold: 30,\r\n    Platinum: 50,\r\n  };\r\n\r\n  let currentBadge = null;\r\n  let nextBadge = null;\r\n\r\n  if (completedTasks >= badgeLevels.Platinum) {\r\n    currentBadge = \"Platinum\";\r\n  } else if (completedTasks >= badgeLevels.Gold) {\r\n    currentBadge = \"Gold\";\r\n    nextBadge = \"Platinum\";\r\n  } else if (completedTasks >= badgeLevels.Silver) {\r\n    currentBadge = \"Silver\";\r\n    nextBadge = \"Gold\";\r\n  } else if (completedTasks >= badgeLevels.Bronze) {\r\n    currentBadge = \"Bronze\";\r\n    nextBadge = \"Silver\";\r\n  } else {\r\n    nextBadge = \"Bronze\";\r\n  }\r\n\r\n  return (\r\n    <section className=\"metrics bg-gradient-to-br from-white to-gray-100 p-6 rounded-lg shadow-lg text-black w-full max-w-md\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Metrics</h2>\r\n      <p><strong>Completed Tasks:</strong> {completedTasks}</p>\r\n      <p><strong>Current Streak:</strong> {streak} days</p>\r\n\r\n      {currentBadge && (\r\n        <div className=\"mt-4 p-4 bg-gradient-to-r from-yellow-400 to-orange-500 text-white rounded-lg shadow\">\r\n          <p className=\"font-bold text-center\">You earned a {currentBadge} Badge!</p>\r\n        </div>\r\n      )}\r\n\r\n      {nextBadge && (\r\n        <div className=\"mt-4\">\r\n          <p><strong>Next Badge:</strong> {nextBadge}</p>\r\n          <p>Complete {badgeLevels[nextBadge] - completedTasks} more tasks to earn this badge!</p>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Metrics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}